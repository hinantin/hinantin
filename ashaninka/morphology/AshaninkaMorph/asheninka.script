       #--------------------------------------------------------#
       # delete all tags and special chars in surface forms     #
       #--------------------------------------------------------#
       define Cleanup1  [["@EP"|"@PRONLEN"] -> ""];
       define Cleanup2 ["" <- ["@EP"|"@PRONLEN"]];

      define Vowels [a|e|i|o|u|á|é|í|ó|ú];
      define Cons [b|c|d|f|g|h|j|k|l|m|n|ñ|p|q|r|s|t|v|w|y|z];

      #--------------------------------#
      # allow upper/lower case letters #
      #--------------------------------#

      define Lowercase [A (->) a, B (->) b, C (->) c,D (->) d,E (->) e,F (->) f,G (->) g,H (->) h,I (->) i,J (->) j,K (->) k,L (->) l,M (->) m,N (->) n,O (->) o,P (->) p,Q (->) q,R (->) r,S (->) s,T (->) t,U (->) u,V (->) v,W (->) w,X (->) x,Y (->) y,Z (->) z,Ñ (->) ñ];

      define UpperCase [ a (->) A,b (->) B,c (->) C,d (->) D,e (->) E,f (->) F,g (->) G,h (->) H,i (->) I,j (->) J,k (->) K,l (->) L,m (->) M,n (->) N,o (->) O,p (->) P,q (->) Q,r (->) R,s (->) S,t (->) T,u (->) U,v (->) V,w (->) W,x (->) X,y (->) Y,z (->) Z,ñ (->) Ñ];

      ##########################
      #        Ortography      #
      # Normalization Patterns #
      #                        #
      ##########################

      define QUIReplacement [ {ky} (->) {qui} || _ [a|á] ];
      define QUReplacement [ {k} (->) {qu} || _ [e|i|é|í] ,, {k} (->) {qü} || _ [e|i|é|í] ];
      define CReplacement [ {k} (->) {c} || _ [a|o|u|á|é|í] ];

      define JReplacement [ {h} (->) {j} || _ Vowels ];

      define BReplacement [ {v} (->) {b} || _ Vowels ];
      define WReplacement [ {v} (->) {w} || _ Vowels ];

      define PIReplacement [ {py} (->) {pi} || _ [a|á] ];
      define KIReplacement [ {ky} (->) {ki} || _ [a|á] ,, {ky} (->) {qy} || _ [a|á] ]; 
      define RIReplacement [ {ry} (->) {ri} || _ [a|á] ];

      define TIReplacement [ {ty} (->) {ti} || _ [e|é] ];

      define NYReplacement [ {ny} (->) {ñ} || _ Vowels ];
      define VowelsWithAccent [ {a} (->) {á}, {e} (->) {é}, {i} (->) {í},{o} (->) {ó}, {u} (->) {ú}];

      define Orthography [ QUIReplacement .o. QUReplacement .o. CReplacement .o. JReplacement .o. BReplacement .o. WReplacement 
.o. PIReplacement .o. KIReplacement .o. RIReplacement .o. TIReplacement .o. NYReplacement .o. VowelsWithAccent ];

      ##########################
      #                        #
      #          Verbs         #
      #                        #
      ##########################
      source v-p-1.foma
      source v-p-2.foma

      define Pref [(P=1) (P=2)] ;

      ##########################
      #                        #
      #        Epenthesis      #
      #                        #
      ##########################
      define AEpenthesisRule1 [ "@EP" -> {a}"@EP" || t _ v ]; 
      define AEpenthesisRule2 [ "@EP" -> {a}"@EP" || r _ y ]; 

      define AEpenthesisRule3 [ "@EP" -> {a}"@EP" || s _ r ]; # pinkatsari
      define AEpenthesisRule4 [ "@EP" -> {a}"@EP" || k _ m ]; # notoncamento
      define AEpenthesisRule5 [ "@EP" -> {a}"@EP" || t _ m ]; # itotamento
      define AEpenthesisRule6 [ "@EP" -> {a}"@EP" || k _ n ]; # notyoonkantsi

      define TEpenthesisRule1 [ "@EP" -> {t}"@EP" || i _ i ]; 
      define TEpenthesisRule2 [ "@EP" -> {t}"@EP" || a _ a ]; 
      define TEpenthesisRule3 [ "@EP" -> {t}"@EP" || e _ a ]; 
      define TEpenthesisRule4 [ "@EP" -> {t}"@EP" || a _ e ]; 
      define TEpenthesisRule5 [ "@EP" -> {t}"@EP" || o _ a ]; 
      define TZEpenthesisRule1 [ "@EP" -> {tz}"@EP" || e _ i ]; ! ^EP IRREALIS ; 
      define TZEpenthesisRule2 [ "@EP" -> {tz}"@EP" || a _ i ]; 

      define Epenthesis [ AEpenthesisRule1 .o. AEpenthesisRule2 .o. AEpenthesisRule3 .o. AEpenthesisRule4 .o. AEpenthesisRule5 .o. AEpenthesisRule6 
.o. TEpenthesisRule1 .o. TEpenthesisRule2 
.o. TEpenthesisRule3 .o. TEpenthesisRule4 .o. TEpenthesisRule5 .o. TZEpenthesisRule1 .o. TZEpenthesisRule2 ];

      ##########################
      #                        #
      #        Transitive      #
      #                        #
      ##########################
       define TransSubj1 [ "[1SG.A+]" <- "[1SG.S+]" || _ ?* "[+1SG.O]"];
       define TransSubj2 [ "[2SG.A+]" <- "[2SG.S+]" || _ ?* "[+2SG.O]"];
       define TransSubj3 [ "[3SGm.A+]" <- "[3SGm.S+]" || _ ?* "[+3SGm.O]"];
       define TransSubj4 [ "[3SGnm.A+]" <- "[3SGnm.S+]" || _ ?* "[+3SGnm.O]"];
       define TransSubj5 [ "[1PL.A+]" <- "[1PL.S+]" || _ ?* "[+1PL.O]"];
      define VerbRules TransSubj1 .o. TransSubj2 .o. TransSubj3 .o. TransSubj4 .o. TransSubj5 ;

      source v-s-1.foma
      source v-s-2.foma
      source v-s-3.foma
      source v-s-4.foma
#      source v-s-5.foma
#      source v-s-6.foma
#      source v-s-7.foma

      define V=S=PRNO [
         "[+1SG.O]" : "@EP"{na}
       | "[+2SG.O]" : "@EP"{mi}
       | "[+3SGm.O]" : "@EP"{ri}
       | "[+3SGnm.O]" : "@EP"{ro}
       | "[+1PL.O]" : "@EP"{ai}
      ];
      
      define V=S=IRR [
       "[+IRR]" : "@EP"[{e}|{ia}|{n}|{ri}|{ye}|{a}|{i}]
      ];
      
      define V=S=DIR [
       "[+DIR]" : "@EP"[{av}|{an}|{ap}]
      ];
      
      define V=S=PRF [
       "[+PRF]" : "@EP"[{ak}|{aka}]
      ];
      
      define V=S=OPT [
       "[+OPT]" : "@EP"[{ta}]
      ];
      
      define V=S=PL [
       "[+PL]" : "@EP"[{he}|{paye}|{ni}|{aiy}|{het}|{ite}]
      ];
      
      define V=S=REGR [
       "[+REGR]" : "@EP"[{a}|{ah}]
      ];
      
      define V=S=CNTF [
       "[+CNT.F]" : "@EP"[{mi}]
      ];
      
      define V=S=AUG [
       "[+AUG]" : "@EP"[{piro}|{ni}|{pero}]
      ];
      
      define V=S=DUR [
       "[+DUR]" : "@EP"[{vai}]
      ];
      
      define V=S=BEN [
       "[+BEN]" : "@EP"[{vint}]
      ];
      
      define V=S=ADVP [
       "[+ADV.P]" : "@EP"[{ranki}]
      ];
      
      define V=S=ADV [
       "[+ADV]" : "@EP"[{ra}|{ka}|{nta}|{ranki}|{paite}|{ni}]
      ];
      
      define V=S=APPR [
       "[+APPR]" : "@EP"[{kari}]
      ];
      
      define V=S=ICPL [
       "[+ICPL]" : "@EP"[{it}|{e}]
      ];
      
      define V=S=REL [
       "[+REL]" : "@EP"[{ri}|{ni}|{ka}]
      ];
      
      define V=S=IMPP [
       "[+IMP.P]" : "@EP"[{ai}|{t}|{tz}]
      ];
      
      define V=S=quickly [
       "[+quickly]" : "@EP"[{ite}]
      ];
      
      define V=S=EXCL [
       "[+EXCL]" : "@EP"[{ve}]
      ];
      
      define V=S=Q [
       "[+Q]" : "@EP"[{ka}]
      ];
      
      define V=S=APPL [
       "[+APPL]" : "@EP"[{ako}|{t}]
      ];
      
      define V=S=noun [
       "[+noun]" : "@EP"[{vatsa}|{pori}|{ani}|{atziri}]
      ];
      
      define V=S=disheveledhead [
       "[+disheveled.head]" : "@EP"[{menkotzi}]
      ];
      
      define V=S=DIM [
       "[+DIM]" : "@EP"[{nint}|{ni}|{ini}]
      ];
      
      define V=S=CL [
       "[+CL]" : "@EP"[{}]
      ];
      
      define V=S=3mposs [
       "[+3m.poss]" : "@EP"[{i}|{y}]
      ];
      
      define V=S=NMZ [
       "[+NMZ]" : "@EP"[{nka}|{ri}|{nk}|{ntsi}|{antsi}|{rintsi}|{rentsi}|{mento}]
      ];
      
      define V=S=ADJ [
       "[+ADJ]" : "@EP"[{ri}|{tsinkari}]
      ];
      
      define V=S=once [
       "[+once]" : "@EP"[{apaint}]
      ];
      
      define V=S=APPLINT [
       "[+APPL.INT]" : "@EP"[{ashi}|{tz}]
      ];
      
      define V=S=REP [
       "[+REP]" : "@EP"[{a}]
      ];
      
      define V=S=poss [
       "[+poss]" : "@EP"[{ni}|{te}]
      ];
      
      define V=S=EMPH [
       "[+EMPH]" : "@EP"[{tya}|{kya}|{poo}|{ha}|{tzi}]
      ];
      
      define V=S=APPLBEN [
       "[+APPL.BEN]" : "@EP"[{vent}]
      ];
      
      define V=S=one [
       "[+one]" : "@EP"[{aparoni}]
      ];
      
      define V=S=DEM [
       "[+DEM]" : "@EP"[{ra}|{ka}]
      ];
      
      define V=S=RCP [
       "[+RCP]" : "@EP"[{av}]
      ];
      
      define V=S=REV [
       "[+REV]" : "@EP"[{ry}]
      ];
      
      define V=S=ADJnm [
       "[+ADJ.n.m.]" : "@EP"[{nto}|{tsinkaro}]
      ];
      
      define V=S=ADJm [
       "[+ADJ.m.]" : "@EP"[{ri}|{ntzi}]
      ];
      
      define V=S=before [
       "[+before]" : "@EP"[{it}]
      ];
      
      define V=S=ADJm [
       "[+ADJ.m]" : "@EP"[{ri}|{tsinkari}]
      ];
      
      define V=S=ADJnm [
       "[+ADJ.n.m]" : "@EP"[{ro}|{nto}]
      ];
      
      define V=S=deceased [
       "[+deceased]" : "@EP"[{ni}]
      ];
      
      define V=S=smallpart [
       "[+small.part]" : "@EP"[{patsa}]
      ];
      
      define V=S=DEGR [
       "[+DEGR]" : "@EP"[{piro}]
      ];
      
      define V=S=small [
       "[+small]" : "@EP"[{kapichi}]
      ];
      
      define V=S=only [
       "[+only]" : "@EP"[{intaani}]
      ];
      
      define V=S=INCH [
       "[+INCH]" : "@EP"[{ima}|{imai}|{amaint}]
      ];
      
      define V=S=DIMDEGR [
       "[+DIM.DEGR]" : "@EP"[{nint}]
      ];
      
      define V=S=flat [
       "[+flat]" : "@EP"[{miront}]
      ];
      
      define V=S=early [
       "[+early]" : "@EP"[{aman}]
      ];
      
      define V=S=forawhile [
       "[+for.a.while]" : "@EP"[{apaint}]
      ];
      
      define V=S=notyet [
       "[+not.yet]" : "@EP"[{tekira}]
      ];
      
      define V=S=REC [
       "[+REC]" : "@EP"[{av}]
      ];
      


define S [
(V=S=PRNO) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) | 
 (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=OPT) | 
 (V=S=PL) (V=S=PRF) (V=S=REGR) (V=S=IRR) (V=S=CNTF) | 
 (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=PRF) (V=S=PRNO) | 
 (V=S=REGR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=PRNO) | 
 (V=S=PRNO) | 
 (V=S=AUG) (V=S=IRR) | 
 (V=S=DUR) (V=S=IRR) | 
 (V=S=IRR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=IRR) (V=S=IRR) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=BEN) (V=S=PRF) | 
 (V=S=DIR) (V=S=PRF) (V=S=ADVP) | 
 (V=S=IRR) (V=S=IRR) (V=S=ADV) | 
 (V=S=PRNO) (V=S=APPR) | 
 (V=S=IRR) (V=S=REGR) (V=S=ICPL) (V=S=IRR) (V=S=CNTF) | 
 (V=S=DUR) | 
 (V=S=REGR) | 
 (V=S=DUR) (V=S=PRF) | 
 (V=S=PRNO) (V=S=ADV) | 
 (V=S=IRR) (V=S=IRR) | 
 (V=S=IRR) (V=S=PRNO) (V=S=REL) (V=S=CNTF) | 
 (V=S=DUR) (V=S=REGR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=PRNO) (V=S=PRNO) | 
 (V=S=AUG) | 
 (V=S=IRR) (V=S=IRR) (V=S=REL) | 
 (V=S=IRR) (V=S=REL) | 
 (V=S=DIR) (V=S=PRF) | 
 (V=S=IMPP) | 
 (V=S=quickly) (V=S=PRF) | 
 (V=S=PRF) | 
 (V=S=ADV) (V=S=EXCL) | 
 (V=S=REL) | 
 (V=S=REL) (V=S=Q) | 
 (V=S=APPL) | 
 (V=S=noun) (V=S=noun) (V=S=DIR) (V=S=REGR) | 
 (V=S=IRR) (V=S=OPT) | 
 (V=S=REGR) (V=S=IRR) | 
 (V=S=IMPP) (V=S=PRF) | 
 (V=S=PRNO) (V=S=disheveledhead) (V=S=PRF) | 
 (V=S=quickly) (V=S=PRF) (V=S=PRNO) | 
 (V=S=DIM) (V=S=PRNO) | 
 (V=S=CL) (V=S=PRF) | 
 (V=S=IRR) (V=S=IRR) (V=S=OPT) | 
 (V=S=REGR) (V=S=PRNO) (V=S=IRR) (V=S=ADV) | 
 (V=S=3mposs) (V=S=NMZ) | 
 (V=S=ADJ) | 
 (V=S=PL) (V=S=DIR) (V=S=PRF) | 
 (V=S=once) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=APPLINT) (V=S=PRF) (V=S=PRNO) | 
 (V=S=3mposs) (V=S=NMZ) (V=S=PRNO) (V=S=DIM) | 
 (V=S=PL) (V=S=PRF) | 
 (V=S=NMZ) (V=S=PRNO) (V=S=PL) | 
 (V=S=ADV) | 
 (V=S=REL) (V=S=ADV) | 
 (V=S=IRR) (V=S=IRR) (V=S=PRNO) (V=S=REL) | 
 (V=S=IRR) (V=S=PRNO) (V=S=OPT) | 
 (V=S=PL) (V=S=REL) | 
 (V=S=IMPP) (V=S=PRNO) (V=S=ADV) | 
 (V=S=IRR) (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=OPT) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=PL) (V=S=PL) | 
 (V=S=PL) (V=S=REGR) (V=S=PL) | 
 (V=S=IRR) (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) (V=S=OPT) | 
 (V=S=noun) (V=S=PRNO) | 
 (V=S=APPLINT) (V=S=PRNO) | 
 (V=S=REP) (V=S=PRNO) | 
 (V=S=REP) (V=S=REP) (V=S=ICPL) (V=S=IRR) (V=S=PRNO) | 
 (V=S=ICPL) (V=S=IRR) | 
 (V=S=PL) (V=S=EXCL) | 
 (V=S=DIR) (V=S=REGR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=PRNO) (V=S=REL) | 
 (V=S=IRR) (V=S=IRR) (V=S=CNTF) | 
 (V=S=PRNO) (V=S=REL) | 
 (V=S=NMZ) | 
 (V=S=3mposs) (V=S=poss) (V=S=PRNO) | 
 (V=S=IRR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=PRNO) (V=S=APPR) | 
 (V=S=EMPH) (V=S=Q) | 
 (V=S=PRF) (V=S=PRNO) (V=S=REL) | 
 (V=S=DUR) (V=S=PRF) (V=S=PRNO) | 
 (V=S=APPLBEN) (V=S=PRNO) (V=S=REL) | 
 (V=S=IRR) (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=APPL) (V=S=ICPL) (V=S=PRNO) | 
 (V=S=one) | 
 (V=S=ADJ) (V=S=DEM) | 
 (V=S=RCP) (V=S=PRF) (V=S=PRNO) | 
 (V=S=PRF) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=IRR) (V=S=DIR) (V=S=PRF) (V=S=IRR) | 
 (V=S=REV) (V=S=APPL) (V=S=ICPL) (V=S=REGR) (V=S=PRNO) | 
 (V=S=DIR) (V=S=PRF) (V=S=ADV) | 
 (V=S=PRF) (V=S=IRR) | 
 (V=S=NMZ) (V=S=REL) | 
 (V=S=ADJnm) | 
 (V=S=ADJm) | 
 (V=S=before) | 
 (V=S=APPL) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=ADVP) | 
 (V=S=Q) | 
 (V=S=APPL) (V=S=PRF) | 
 (V=S=DIR) (V=S=PRF) (V=S=PRNO) | 
 (V=S=ADJm) (V=S=PL) | 
 (V=S=DIR) (V=S=REGR) (V=S=PRNO) | 
 (V=S=REGR) (V=S=ADJ) (V=S=deceased) | 
 (V=S=ADJm) (V=S=smallpart) (V=S=DIM) | 
 (V=S=DIR) (V=S=PRF) (V=S=PL) (V=S=PL) | 
 (V=S=IRR) (V=S=DEGR) (V=S=IRR) | 
 (V=S=once) (V=S=PRNO) | 
 (V=S=REV) (V=S=APPL) (V=S=PRF) | 
 (V=S=ADJ) (V=S=PRNO) | 
 (V=S=APPLINT) (V=S=PL) (V=S=DIR) (V=S=REGR) | 
 (V=S=DIR) (V=S=PRF) (V=S=REL) | 
 (V=S=CL) (V=S=ADV) | 
 (V=S=REGR) (V=S=REL) | 
 (V=S=small) | 
 (V=S=IMPP) (V=S=PRF) (V=S=PRNO) | 
 (V=S=DUR) (V=S=REGR) | 
 (V=S=PL) | 
 (V=S=PL) (V=S=PRNO) | 
 (V=S=BEN) (V=S=PRNO) | 
 (V=S=APPL) (V=S=PRF) (V=S=PRNO) | 
 (V=S=only) | 
 (V=S=AUG) (V=S=DIR) (V=S=PRF) (V=S=REL) | 
 (V=S=RCP) (V=S=PRF) (V=S=REL) | 
 (V=S=IMPP) (V=S=PRF) (V=S=REL) | 
 (V=S=APPL) (V=S=REL) | 
 (V=S=PRNO) (V=S=IRR) | 
 (V=S=IRR) (V=S=CNTF) | 
 (V=S=DUR) (V=S=REL) | 
 (V=S=REGR) (V=S=IRR) (V=S=REL) | 
 (V=S=NMZ) (V=S=poss) | 
 (V=S=IRR) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=ICPL) (V=S=PRF) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=PL) (V=S=ADV) | 
 (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=EMPH) | 
 (V=S=PRF) (V=S=REL) | 
 (V=S=DUR) (V=S=PRF) (V=S=REL) | 
 (V=S=IRR) (V=S=REGR) (V=S=IRR) | 
 (V=S=IRR) (V=S=Q) | 
 (V=S=INCH) (V=S=PRF) (V=S=IRR) | 
 (V=S=IMPP) (V=S=PRNO) (V=S=Q) | 
 (V=S=IRR) (V=S=PRNO) (V=S=IRR) | 
 (V=S=IRR) (V=S=PRF) (V=S=IRR) | 
 (V=S=DIMDEGR) (V=S=PRF) (V=S=PRNO) (V=S=REL) | 
 (V=S=IRR) (V=S=IMPP) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=PL) (V=S=PRF) (V=S=PRNO) | 
 (V=S=ICPL) (V=S=REGR) | 
 (V=S=DIR) (V=S=REGR) | 
 (V=S=REP) (V=S=REGR) (V=S=PRNO) | 
 (V=S=ICPL) (V=S=REL) | 
 (V=S=APPL) (V=S=ICPL) (V=S=REL) | 
 (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) (V=S=OPT) | 
 (V=S=REP) (V=S=IRR) (V=S=PRNO) (V=S=REL) | 
 (V=S=INCH) (V=S=IRR) (V=S=PRNO) | 
 (V=S=REGR) (V=S=PRNO) (V=S=REL) (V=S=Q) | 
 (V=S=flat) (V=S=CL) (V=S=REL) | 
 (V=S=BEN) (V=S=PRNO) (V=S=REL) | 
 (V=S=IRR) (V=S=APPL) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IMPP) (V=S=PRNO) | 
 (V=S=IRR) (V=S=PL) (V=S=PRNO) (V=S=IRR) (V=S=PRNO) | 
 (V=S=DIM) (V=S=PRF) (V=S=PRNO) (V=S=REL) | 
 (V=S=DUR) (V=S=REP) (V=S=REL) | 
 (V=S=APPL) (V=S=REGR) (V=S=PRNO) (V=S=REL) | 
 (V=S=CL) | 
 (V=S=CL) (V=S=REL) | 
 (V=S=IRR) (V=S=DUR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=DUR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=PRF) (V=S=REGR) (V=S=REL) | 
 (V=S=APPL) (V=S=IRR) (V=S=REL) | 
 (V=S=APPLINT) (V=S=PRF) | 
 (V=S=DIR) (V=S=REGR) (V=S=PRNO) (V=S=REL) | 
 (V=S=IMPP) (V=S=DIR) (V=S=PRF) (V=S=PRNO) | 
 (V=S=DIR) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=APPLINT) (V=S=REGR) (V=S=PRNO) | 
 (V=S=REGR) (V=S=PRNO) (V=S=REL) | 
 (V=S=DIR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=PL) (V=S=IRR) | 
 (V=S=REL) (V=S=PL) | 
 (V=S=PRF) (V=S=REGR) (V=S=IRR) | 
 (V=S=APPL) (V=S=PRNO) (V=S=REL) | 
 (V=S=AUG) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=EMPH) | 
 (V=S=REP) (V=S=PL) (V=S=PRF) (V=S=PRNO) | 
 (V=S=PL) (V=S=PL) (V=S=PL) | 
 (V=S=PRF) (V=S=EMPH) | 
 (V=S=ICPL) (V=S=PRNO) (V=S=AUG) | 
 (V=S=REGR) (V=S=PRNO) | 
 (V=S=noun) (V=S=REL) | 
 (V=S=IRR) (V=S=noun) (V=S=IRR) | 
 (V=S=OPT) | 
 (V=S=IRR) (V=S=PRNO) (V=S=CNTF) | 
 (V=S=DIR) (V=S=REGR) (V=S=IRR) (V=S=CNTF) | 
 (V=S=APPL) (V=S=REP) (V=S=PL) (V=S=IRR) | 
 (V=S=DIR) (V=S=PRF) (V=S=IRR) | 
 (V=S=APPLBEN) (V=S=PRNO) | 
 (V=S=DIR) (V=S=REGR) (V=S=IRR) | 
 (V=S=IMPP) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=APPL) (V=S=PRNO) | 
 (V=S=APPLINT) | 
 (V=S=early) (V=S=ICPL) (V=S=IRR) | 
 (V=S=APPL) (V=S=IRR) (V=S=PRNO) (V=S=OPT) | 
 (V=S=IRR) (V=S=PRF) (V=S=PRNO) | 
 (V=S=forawhile) | 
 (V=S=REGR) (V=S=ICPL) (V=S=IRR) | 
 (V=S=DUR) (V=S=APPLINT) (V=S=IRR) | 
 (V=S=PRF) (V=S=PRNO) (V=S=ADV) | 
 (V=S=PRF) (V=S=REL) (V=S=Q) | 
 (V=S=IRR) (V=S=DUR) (V=S=IRR) | 
 (V=S=DUR) (V=S=DIR) (V=S=REGR) | 
 (V=S=INCH) (V=S=PRNO) | 
 (V=S=APPL) (V=S=REGR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=REGR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=AUG) (V=S=AUG) | 
 (V=S=PRF) (V=S=ADV) (V=S=EMPH) | 
 (V=S=IMPP) (V=S=PRF) (V=S=ADV) | 
 (V=S=PRF) (V=S=ADV) | 
 (V=S=DUR) (V=S=APPLINT) (V=S=PRNO) | 
 (V=S=IRR) (V=S=REP) (V=S=PRNO) (V=S=IRR) (V=S=PRNO) | 
 (V=S=DUR) (V=S=PL) (V=S=PL) | 
 (V=S=IRR) (V=S=IRR) (V=S=PRNO) (V=S=OPT) | 
 (V=S=IRR) (V=S=DIR) (V=S=REGR) (V=S=IRR) (V=S=PRNO) (V=S=OPT) | 
 (V=S=REGR) (V=S=IRR) (V=S=OPT) | 
 (V=S=notyet) | 
 (V=S=IRR) (V=S=APPLINT) (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=APPL) (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=APPL) (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=noun) (V=S=IRR) (V=S=PRNO) | 
 (V=S=ICPL) (V=S=PRNO) (V=S=REL) | 
 (V=S=APPL) (V=S=IRR) (V=S=PRNO) (V=S=REL) | 
 (V=S=REGR) (V=S=IRR) (V=S=CNTF) | 
 (V=S=IMPP) (V=S=PRNO) (V=S=CNTF) | 
 (V=S=CNTF) | 
 (V=S=IMPP) (V=S=CNTF) | 
 (V=S=PL) (V=S=PRF) (V=S=IRR) (V=S=CNTF) | 
 (V=S=EMPH) (V=S=CNTF) | 
 (V=S=DIR) (V=S=PRF) (V=S=PL) (V=S=OPT) | 
 (V=S=IRR) (V=S=DIR) (V=S=REGR) (V=S=IRR) | 
 (V=S=IMPP) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=REL) | 
 (V=S=DIR) (V=S=REGR) (V=S=IRR) (V=S=OPT) | 
 (V=S=IMPP) (V=S=DIR) (V=S=PRF) | 
 (V=S=IRR) (V=S=IRR) (V=S=EMPH) | 
 (V=S=APPLINT) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=APPLINT) (V=S=INCH) (V=S=PRNO) | 
 (V=S=APPLINT) (V=S=DIR) (V=S=PRF) | 
 (V=S=APPLINT) (V=S=DIR) (V=S=PRF) (V=S=PRNO) | 
 (V=S=APPLINT) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=REP) (V=S=IRR) (V=S=PRNO) | 
 (V=S=REC) (V=S=PRF) (V=S=REL) | 
 (V=S=IRR) (V=S=APPR) | 
 (V=S=APPL) (V=S=IRR) (V=S=PRNO) (V=S=APPR) | 
 (V=S=REGR) (V=S=APPR) | 
 (V=S=APPR) | 
 (V=S=NMZ) (V=S=CL) | 
 (V=S=ICPL) (V=S=PRF) (V=S=PRNO) | 
 (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=IRR) (V=S=CL) (V=S=PRF) (V=S=IRR) (V=S=PRNO) | 
 (V=S=IRR) (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=OPT) | 
 (V=S=IRR) (V=S=APPLINT) (V=S=ICPL) (V=S=REGR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=ICPL) (V=S=IMPP) (V=S=PRNO) | 
 (V=S=IRR) (V=S=ADVP) | 
 (V=S=DIR) (V=S=ICPL) (V=S=IRR) (V=S=REL) | 
 (V=S=PL) (V=S=PRNO) (V=S=REL) | 
 (V=S=DIR) | 
 (V=S=DIR) (V=S=PRF) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=DUR) (V=S=IRR) (V=S=OPT) | 
 (V=S=IRR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) (V=S=EMPH) | 
 (V=S=PRF) (V=S=IRR) (V=S=PRNO) (V=S=PRNO) | 
 (V=S=APPLINT) (V=S=IRR) (V=S=PRNO) | 
 (V=S=PRNO) (V=S=EMPH) | 
 (V=S=IRR) (V=S=DIR) (V=S=REGR) (V=S=IRR) (V=S=PRNO) | 
 (V=S=AUG) (V=S=DIR) (V=S=PRF) (V=S=IRR) (V=S=PRNO) (V=S=REL) | 
 (V=S=AUG) (V=S=IRR) (V=S=PRNO) (V=S=REL) 
];

#      define S [ (V=S=1) (V=S=2) (V=S=3) (V=S=4) ]; #(V=S=3) (S=4) (S=5) (S=6) (S=7)] ;
      define Suff [S] ;

      ##########################
      #   Subject / Object     #
      #     Restricctions      #
      #                        #
      ##########################
      define TransSubjRestr1 [~$["[1SG.S+]"?*["[+1SG.O]"|"[+2SG.O]"|"[+3SGm.O]"|"[+3SGnm.O]"|"[+1PL.O]"]]];
      define TransSubjRestr2 [~$["[2SG.S+]"?*["[+1SG.O]"|"[+2SG.O]"|"[+3SGm.O]"|"[+3SGnm.O]"|"[+1PL.O]"]]];
      define TransSubjRestr3 [~$["[3SGm.S+]"?*["[+1SG.O]"|"[+2SG.O]"|"[+3SGm.O]"|"[+3SGnm.O]"|"[+1PL.O]"]]];
      define TransSubjRestr4 [~$["[3SGnm.S+]"?*["[+1SG.O]"|"[+2SG.O]"|"[+3SGm.O]"|"[+3SGnm.O]"|"[+1PL.O]"]]];
      define TransSubjRestr5 [~$["[1PL.S+]"?*["[+1SG.O]"|"[+2SG.O]"|"[+3SGm.O]"|"[+3SGnm.O]"|"[+1PL.O]"]]];

#      define TransSubjRestr6 [~$[["[VRoot"]?*".O]"]];
#      define FeatRestr [TransSubjRestr1 .o. TransSubjRestr2 .o. TransSubjRestr3 .o. TransSubjRestr4 .o. TransSubjRestr5 .o. TransSubjRestr6] ;
      define FeatRestr [TransSubjRestr1 .o. TransSubjRestr2 .o. TransSubjRestr3 .o. TransSubjRestr4 .o. TransSubjRestr5 ] ;
#      define FeatRestr [ TransSubjRestr3 ] ;

      source vroot.prq.foma
      source vroot.es.foma
        define VRootPRQ [VRootPRQin|VRootEsin];
      
      define Verb FeatRestr .o. VerbRules .o. [ (Pref) [VRootPRQ] (Suff) ] .o. Epenthesis;

      ##########################
      #                        #
      #          Nouns         #
      #                        #
      ##########################
      source n-p-1.foma
      define NPref [(N=P=1)] ;

      source n-s-1.foma
      source n-s-2.foma
      source n-s-3.foma

      define N=S=poss [
       "[+poss]" : [{te}|{ni}|{ri}]
      ];
      
      define N=S=DEM [
       "[+DEM]" : [{ka}|{nta}|{ra}]
      ];
      
      define N=S=PL [
       "[+PL]" : [{paye}|{payeni}|{paeni}|{pe}]
      ];
      
      define N=S=DIM [
       "[+DIM]" : [{patsaini}|{ini}|{aniki}|{ni}]
      ];
      
      define N=S=LOC [
       "[+LOC]" : [{ki}]
      ];
      
      define N=S=river [
       "[+river]" : [{pareni}|{nihaa}]
      ];
      
      define N=S=CL [
       "[+CL]" : [{}]
      ];
      
      define N=S=smallpartDIM [
       "[+small.part.DIM]" : [{patsaini}]
      ];
      
      define N=S=ADV [
       "[+ADV]" : [{nta}]
      ];
      
      define N=S=EXCL [
       "[+EXCL]" : [{ve}]
      ];
      
      define N=S=ADVP [
       "[+ADV.P]" : [{ranki}]
      ];
      
      define N=S=AUG [
       "[+AUG]" : [{ni}|{ite}]
      ];
      
      define N=S=monkey [
       "[+monkey]" : [{koshiri}]
      ];
      
      define N=S=deceased [
       "[+deceased]" : [{ni}]
      ];
      
      define N=S=leaf [
       "[+leaf]" : [{shi}|{tsipana}]
      ];
      
      define N=S=NOM [
       "[+NOM]" : [{tsi}|{ntsi}|{rintsi}|{rentsi}|{rontsi}]
      ];
      
      define N=S=EMPH [
       "[+EMPH]" : [{kya}|{ha}]
      ];
      
      define N=S=smallpart [
       "[+small.part]" : [{patsa}]
      ];
      
      define N=S=Q [
       "[+Q]" : [{ka}]
      ];
      
      define N=S=DUB [
       "[+DUB]" : [{taima}]
      ];
      
      define N=S=ADVT [
       "[+ADV.T]" : [{ranki}]
      ];
      
      define N=S=this [
       "[+this]" : [{ka}]
      ];
      
      define N=S=wide [
       "[+wide]" : [{tsantsana}]
      ];
      

define N [
 (N=S=poss) | 
 (N=S=DEM) | 
 (N=S=PL) | 
 (N=S=poss) (N=S=DIM) | 
 (N=S=poss) (N=S=DEM) | 
 (N=S=LOC) | 
 (N=S=poss) (N=S=PL) | 
 (N=S=river) (N=S=LOC) | 
 (N=S=CL) (N=S=poss) (N=S=smallpartDIM) | 
 (N=S=LOC) (N=S=smallpartDIM) | 
 (N=S=CL) (N=S=LOC) | 
 (N=S=DIM) | 
 (N=S=LOC) (N=S=ADV) (N=S=EXCL) | 
 (N=S=ADVP) | 
 (N=S=AUG) | 
 (N=S=LOC) (N=S=PL) | 
 (N=S=monkey) | 
 (N=S=deceased) | 
 (N=S=LOC) (N=S=DEM) | 
 (N=S=leaf) | 
 (N=S=NOM) (N=S=DEM) | 
 (N=S=LOC) (N=S=ADV) | 
 (N=S=ADV) | 
 (N=S=CL) (N=S=DEM) | 
 (N=S=EMPH) | 
 (N=S=DIM) (N=S=smallpart) (N=S=DIM) | 
 (N=S=Q) | 
 (N=S=poss) (N=S=LOC) | 
 (N=S=DUB) | 
 (N=S=deceased) (N=S=EXCL) | 
 (N=S=LOC) (N=S=DIM) | 
 (N=S=DEM) (N=S=EMPH) | 
 (N=S=ADVT) | 
 (N=S=this) | 
 (N=S=CL) (N=S=smallpart) (N=S=DIM) | 
 (N=S=EXCL) | 
 (N=S=CL) | 
 (N=S=leaf) (N=S=smallpart) (N=S=DIM) | 
 (N=S=wide) (N=S=AUG) 
];

      define NSuff [ N ]; #(N=S=1) (N=S=2) (N=S=3)] ;

      ###################################
      #          Lenition Rules         #
      ###################################
      # nopito (in our lexicon) -> no@PRONLENpito -> no@PRONLENvito -> novito 
      define PWLenitionRule1 [ "@PRONLEN"p -> "@PRONLEN"v || _ [{i}|{a}] ]; 
      define KJLenitionRule1 [ "@PRONLEN"k -> "@PRONLEN"y || _ [{o}|{a}] ]; 
      
      # nokitzi (in our lexicon) -> no@PRONLENkitzi -> no@PRONLENitzi -> noitzi 
      define KLenitionRule2 [ "@PRONLEN"k -> "@PRONLEN" || _ [{i}] ]; 
      
      define Lenition [ PWLenitionRule1 .o. KJLenitionRule1 .o. KLenitionRule2 ];

      #########################################
      #          Vowel Deletion Rules         #
      #########################################
      # noirani (in our lexicon) -> no@PRONLENirani -> n@PRONLENirani -> nirani 
#      define VowelLossRule1 [ o"@PRONLEN" -> "@PRONLEN" || n _ [{i}|{o}|{a}] ]; 
#      define VowelLossRule2 [ i"@PRONLEN" -> "@PRONLEN" || p _ [{i}|{o}|{a}] ]; 
      
#      define VowelLoss [ VowelLossRule1 .o. VowelLossRule2 ];

      source nroot.prq.foma
      source aroot.prq.foma
      source nroot.es.foma
        define NRootPRQ [NRootPRQin|ARootPRQin|NRootESin];
      define Noun [ (NPref) [NRootPRQ] (NSuff) ] .o. Lenition ; #.o. VowelLoss ;
      
      ##########################
      #                        #
      #         Adverb         #
      #                        #
      ##########################
      source advroot.prq.foma
        define AdvRootPRQ AdvRootPRQin;
      define Adverb [ [AdvRootPRQ] ];

      ##########################
      #                        #
      #          Other         #
      #                        #
      ##########################
      source oroot.prq.foma
        define ORootPRQ ORootPRQin;
      define Other [ [ORootPRQ] ];

      read regex Cleanup2 .o. [ [Other|Adverb|Noun|Verb] ] .o. Cleanup1 .o. Orthography .o. UpperCase;
#      read regex [ [Other|Adverb|Noun|Verb] ] .o. Orthography ;

      save stack asheninka.bin

